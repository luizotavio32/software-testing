import { File } from '@stryker-mutator/api/core';
import * as ts from 'typescript';
import { TypescriptWithStrykerOptions } from '../TypescriptWithStrykerOptions';
export declare function parseFile(file: File, target: ts.ScriptTarget | undefined): ts.SourceFile;
/**
 * For some reason, typescript on windows doesn't like back slashes
 * @param fileName The file name to be normalized
 */
export declare function normalizeFileForTypescript(fileName: string): string;
/**
 * For some reason, typescript on windows doesn't like back slashes
 * @param fileName The file name to be normalized
 */
export declare function normalizeFileFromTypescript(fileName: string): string;
export declare function getTSConfig(options: TypescriptWithStrykerOptions): ts.ParsedCommandLine;
export declare function getProjectDirectory(options: TypescriptWithStrykerOptions): string;
/**
 * Verifies that the installed version of typescript satisfies '>=2.4` and otherwise: throws an exception
 */
export declare function guardTypescriptVersion(): void;
export declare function printNode(node: ts.Node, originalSourceFile: ts.SourceFile): string;
export declare function isTypescriptFile(fileName: string): boolean;
export declare function isJavaScriptFile(file: ts.OutputFile): boolean;
export declare function isMapFile(file: ts.OutputFile): boolean;
/**
 * Determines whether or not given file is a typescript header file (*.d.ts)
 */
export declare function isHeaderFile(fileName: string): boolean;
//# sourceMappingURL=tsHelpers.d.ts.map