"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts = require("typescript");
const tsHelpers_1 = require("../helpers/tsHelpers");
const NodeMutator_1 = require("./NodeMutator");
const replaceTokens = {
    [ts.SyntaxKind.PlusToken]: '-',
    [ts.SyntaxKind.MinusToken]: '+',
    [ts.SyntaxKind.TildeToken]: '',
};
class UnaryOperatorMutator extends NodeMutator_1.default {
    constructor() {
        super(...arguments);
        this.name = 'UnaryOperator';
    }
    guard(node) {
        return node.kind === ts.SyntaxKind.PrefixUnaryExpression;
    }
    identifyReplacements(node, sourceFile) {
        const replacement = replaceTokens[node.operator];
        if (typeof replacement === 'string') {
            return [{ node, replacement: replacement + tsHelpers_1.printNode(node.operand, sourceFile) }];
        }
        else {
            return [];
        }
    }
}
exports.default = UnaryOperatorMutator;
//# sourceMappingURL=UnaryOperatorMutator.js.map