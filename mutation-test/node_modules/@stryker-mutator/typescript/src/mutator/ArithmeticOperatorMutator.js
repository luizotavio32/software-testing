"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts = require("typescript");
const NodeMutator_1 = require("./NodeMutator");
const replaceTokens = {
    [ts.SyntaxKind.PlusToken]: '-',
    [ts.SyntaxKind.MinusToken]: '+',
    [ts.SyntaxKind.SlashToken]: '*',
    [ts.SyntaxKind.AsteriskToken]: '/',
    [ts.SyntaxKind.PercentToken]: '*',
};
class ArithmeticOperatorMutator extends NodeMutator_1.default {
    constructor() {
        super(...arguments);
        this.name = 'ArithmeticOperator';
    }
    guard(node) {
        return node.kind === ts.SyntaxKind.BinaryExpression;
    }
    identifyReplacements(node) {
        const replacement = replaceTokens[node.operatorToken.kind];
        if (replacement) {
            return [{ node: node.operatorToken, replacement }];
        }
        else {
            return [];
        }
    }
}
exports.default = ArithmeticOperatorMutator;
//# sourceMappingURL=ArithmeticOperatorMutator.js.map