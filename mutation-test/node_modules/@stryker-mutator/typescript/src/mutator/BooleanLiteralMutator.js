"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts = require("typescript");
const tsHelpers_1 = require("../helpers/tsHelpers");
const NodeMutator_1 = require("./NodeMutator");
class BooleanLiteralMutator extends NodeMutator_1.default {
    constructor() {
        super(...arguments);
        this.name = 'BooleanLiteral';
    }
    guard(node) {
        return node.kind === ts.SyntaxKind.FalseKeyword || node.kind === ts.SyntaxKind.TrueKeyword || node.kind === ts.SyntaxKind.PrefixUnaryExpression;
    }
    identifyReplacements(node, sourceFile) {
        if (node.kind === ts.SyntaxKind.FalseKeyword) {
            return [{ node, replacement: 'true' }];
        }
        else if (node.kind === ts.SyntaxKind.TrueKeyword) {
            return [{ node, replacement: 'false' }];
        }
        else if (node.kind === ts.SyntaxKind.PrefixUnaryExpression && node.operator === ts.SyntaxKind.ExclamationToken) {
            return [{ node, replacement: tsHelpers_1.printNode(node.operand, sourceFile) }];
        }
        else {
            return [];
        }
    }
}
exports.default = BooleanLiteralMutator;
//# sourceMappingURL=BooleanLiteralMutator.js.map