"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts = require("typescript");
const NodeMutator_1 = require("./NodeMutator");
class ArrowFunctionMutator extends NodeMutator_1.default {
    constructor() {
        super(...arguments);
        this.name = 'ArrowFunction';
    }
    guard(node) {
        return node.kind === ts.SyntaxKind.ArrowFunction;
    }
    identifyReplacements(fn) {
        if (fn.body.kind === ts.SyntaxKind.Block) {
            // This case is already handled by the BlockMutator.
            return [];
        }
        return [{ node: fn, replacement: '() => undefined' }];
    }
}
exports.default = ArrowFunctionMutator;
//# sourceMappingURL=ArrowFunctionMutator.js.map