"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts = require("typescript");
const tsHelpers_1 = require("../helpers/tsHelpers");
const NodeMutator_1 = require("./NodeMutator");
const replaceTokens = {
    [ts.SyntaxKind.PlusPlusToken]: '--',
    [ts.SyntaxKind.MinusMinusToken]: '++',
};
class UpdateOperatorMutator extends NodeMutator_1.default {
    constructor() {
        super(...arguments);
        this.name = 'UpdateOperator';
    }
    guard(node) {
        return node.kind === ts.SyntaxKind.PrefixUnaryExpression || node.kind === ts.SyntaxKind.PostfixUnaryExpression;
    }
    identifyReplacements(node, sourceFile) {
        const replacementToken = replaceTokens[node.operator];
        if (typeof replacementToken === 'string') {
            const operand = tsHelpers_1.printNode(node.operand, sourceFile);
            const replacement = node.kind === ts.SyntaxKind.PrefixUnaryExpression ? replacementToken + operand : operand + replacementToken;
            return [{ node, replacement }];
        }
        else {
            return [];
        }
    }
}
exports.default = UpdateOperatorMutator;
//# sourceMappingURL=UpdateOperatorMutator.js.map